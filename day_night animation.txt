#include<windows.h>
#include<math.h>
#ifdef APPLE
#include <GLUT/glut.h>
#else
#include <GL/glut.h>
#endif
#define PI 3.1416
#include <stdlib.h>

float cx=1;
float angle=45;
float cPosition = -1;
float clPosition = -1;
float carPosition = -1;
float first =0.005;
float second =0.6;
float third =0.9;
float x=1;
float y=1;
float z=1;
float h1=0.0;
float h2=1.0;
float h3=0.0;

void init()
{
    glClearColor(0,245,255,1);

    //glClearColor(a,b,c,0.0);
    glOrtho(-5,5,-5,5,-5,5);
}
void circle(float radiusX, float radiusY)
{
    int i;
    float angle = 0.0;
    glBegin(GL_POLYGON);
        for(i=0;i<100;i++){
            angle = 2*PI*i/100;
            glVertex2f(radiusX*cos(angle),radiusY*sin(angle));

        }
        glEnd();
}

void myDisplay()
{
         glPushMatrix();
             glBegin(GL_POLYGON);
          // glColor3f(0.0f,1.0f,0.0f);
           glColor3f(first, second, third);
            glVertex2d(5,-2.5);
           glVertex2d(-5,-2.5);
           glVertex2d(-5,5);
           glVertex2d(5,5);
        glEnd();
        glPopMatrix();
//glPushMatrix();
///Sun
        glPushMatrix();
            glScaled(0.2,0.3,0.5);
            glTranslated(18,14+cx,0);
            glColor3f(102,205,0);
            circle(1,1);
            glPopMatrix();

  ///Light

glPushMatrix();
             glBegin(GL_POLYGON);
          // glColor3f(0.0f,1.0f,0.0f);
           glColor3f(0,0,0);
           glVertex2d(3.8,-0.9);
           glVertex2d(4.6,-0.9);
           glVertex2d(4.6,-1.3);
           glVertex2d(3.8,-1.3);
        glEnd();
        glPopMatrix();
glPushMatrix();
             glBegin(GL_POLYGON);
          // glColor3f(0.0f,1.0f,0.0f);
           glColor3f(x,y,z);
           glVertex2d(3.6,-0.6);
           glVertex2d(4.8,-0.6);
           glVertex2d(4.6,-0.9);
           glVertex2d(3.8,-0.9);


        glEnd();
        glPopMatrix();
glPushMatrix();
             glBegin(GL_POLYGON);
           glColor3f(0,0,0);
           glVertex2d(3.6,-0.1);
           glVertex2d(4.8,-0.1);
           glVertex2d(4.8,-0.6);
           glVertex2d(3.6,-0.6);
           glEnd();
           glPopMatrix();

glPushMatrix();
             glBegin(GL_POLYGON);
           glColor3f(x,y,z);
           glVertex2d(3.8,0.3);
           glVertex2d(4.6,0.3);
           glVertex2d(4.8,-0.1);
           glVertex2d(3.6,-0.1);


        glEnd();
        glPopMatrix();
glPushMatrix();
             glBegin(GL_POLYGON);

           glColor3f(0,0,0);
           glVertex2d(4.2,1);
           glVertex2d(4.3,1);
           glVertex2d(4.3,0.3);
           glVertex2d(4.2,0.3);


        glEnd();
        glPopMatrix();
 glPushMatrix();
            glScaled(0.2,0.3,0.5);
            glTranslated(21.3,4.02,0);
            glColor3f(x,y,z);
            glRotated(angle,0,0,-1);
            circle(0.7,0.7);
            glPopMatrix();

///Hill


glPushMatrix();
             glBegin(GL_POLYGON);

          glColor3f(h1,h2,h3);
           glVertex2d(-4.5,-2);
           glVertex2d(-4,2);
           glVertex2d(-3.5,-1.8);
           glVertex2d(-3.3,0);
           glVertex2d(-2.5,-1.5);
           glVertex2d(-2,-2);
           glEnd();
           glPopMatrix();



glPushMatrix();
             glBegin(GL_POLYGON);
           glColor3f(h1,h2,h3);


       glVertex2d(0,-2);
       glVertex2d(2,1);
       glVertex2d(3,-1);
        glVertex2d(3.5,-1);
         glVertex2d(5,-2);




        glEnd();
        glPopMatrix();
///road
glPushMatrix();
             glBegin(GL_POLYGON);
           glColor3f(0.2f,0.2f,0.2f);
           glVertex2d(-5,-2);
           glVertex2d(5,-2);
           glVertex2d(5,-5);
           glVertex2d(-5,-5);
           glEnd();
           glPopMatrix();

glPushMatrix();
             glBegin(GL_POLYGON);
           glColor3f(x,y,z);

           glVertex2d(-4.5,-3.5);
           glVertex2d(-3.5,-3.5);
           glVertex2d(-3.5,-4);
           glVertex2d(-4.5,-4);


        glEnd();
        glPopMatrix();
glPushMatrix();
             glBegin(GL_POLYGON);
           glColor3f(x,y,z);
       glVertex2d(-2.5,-3.5);
           glVertex2d(-1.5,-3.5);
           glVertex2d(-1.5,-4);
           glVertex2d(-2.5,-4);
        glEnd();
        glPopMatrix();
glPushMatrix();
             glBegin(GL_POLYGON);
           glColor3f(x,y,z);
       glVertex2d(-0.5,-3.5);
           glVertex2d(0.5,-3.5);
           glVertex2d(0.5,-4);
           glVertex2d(-0.5,-4);
        glEnd();
        glPopMatrix();
glPushMatrix();
             glBegin(GL_POLYGON);
           glColor3f(x,y,z);
           glVertex2d(1.5,-3.5);
           glVertex2d(2.5,-3.5);
           glVertex2d(2.5,-4);
           glVertex2d(1.5,-4);
        glEnd();
        glPopMatrix();
glPushMatrix();
             glBegin(GL_POLYGON);
            glColor3f(x,y,z);
            glVertex2d(3.5,-3.5);
            glVertex2d(4.5,-3.5);
            glVertex2d(4.5,-4);
            glVertex2d(3.5,-4);
        glEnd();
        glPopMatrix();


///Buildings
        glPushMatrix();

             glBegin(GL_POLYGON);
           glColor3f(0,0,0);
           glVertex2d(-1,-2);
           glVertex2d(-1,2);
           glVertex2d(0,2);
           glVertex2d(0,-2);
           glEnd();

            glBegin(GL_POLYGON);
           glColor3f(x,y,z);
           glVertex2d(-0.3,-1.5);
           glVertex2d(-0.3,-1.2);
           glVertex2d(-0.1,-1.2);
           glVertex2d(-0.1,-1.5);
           glEnd();

             glBegin(GL_POLYGON);
           glColor3f(x,y,z);
           glVertex2d(-0.9,-1);
           glVertex2d(-0.9,-0.7);
           glVertex2d(-0.7,-0.7);
           glVertex2d(-0.7,-1);
           glEnd();

             glBegin(GL_POLYGON);
           glColor3f(x,y,z);
           glVertex2d(-0.3,-0.5);
           glVertex2d(-0.3,-0.2);
           glVertex2d(-0.1,-0.2);
           glVertex2d(-0.1,-0.5);
           glEnd();

              glBegin(GL_POLYGON);
           glColor3f(x,y,z);
           glVertex2d(-0.9,0);
           glVertex2d(-0.9,0.3);
           glVertex2d(-0.7,0.3);
           glVertex2d(-0.7,0);
           glEnd();

              glBegin(GL_POLYGON);
           glColor3f(x,y,z);
           glVertex2d(-0.3,0.5);
           glVertex2d(-0.3,0.8);
           glVertex2d(-0.1,0.8);
           glVertex2d(-0.1,0.5);
           glEnd();

              glBegin(GL_POLYGON);
           glColor3f(x,y,z);
           glVertex2d(-0.9,1);
           glVertex2d(-0.9,1.3);
           glVertex2d(-0.7,1.3);
           glVertex2d(-0.7,1);
           glEnd();
           glPopMatrix();

///White Building1
        glPushMatrix();
              glBegin(GL_POLYGON);
              glColor3f(x,y,z);

           glVertex2d(-4.8,-2);
           glVertex2d(-4.8,2);
           glVertex2d(-4.5,2.5);
           glVertex2d(-4.2,2);
           glVertex2d(-4.2,2);
           glVertex2d(-4.2,-2);
           glEnd();

            glBegin(GL_POLYGON);
              glColor3f(0.2,0.2,0.2);
           glVertex2d(-4.6,-1.7);
           glVertex2d(-4.6,-1.4);
           glVertex2d(-4.4,-1.4);
           glVertex2d(-4.4,-1.7);
           glEnd();


            glBegin(GL_POLYGON);
            glColor3f(0.2,0.2,0.2);
           glVertex2d(-4.6,-1);
           glVertex2d(-4.6,-0.7);
           glVertex2d(-4.4,-0.7);
           glVertex2d(-4.4,-1);
           glEnd();

             glBegin(GL_POLYGON);
            glColor3f(0.2,0.2,0.2);
           glVertex2d(-4.6,-0.3);
           glVertex2d(-4.6,-0);
           glVertex2d(-4.4,-0);
           glVertex2d(-4.4,-0.3);
           glEnd();

            glBegin(GL_POLYGON);
            glColor3f(0.2,0.2,0.2);
           glVertex2d(-4.6,0.5);
           glVertex2d(-4.6,0.8);
           glVertex2d(-4.4,0.8);
           glVertex2d(-4.4,0.5);
           glEnd();
           glPopMatrix();

            glBegin(GL_POLYGON);
            glColor3f(0.2,0.2,0.2);
           glVertex2d(-4.6,1.5);
           glVertex2d(-4.6,1.2);
           glVertex2d(-4.4,1.2);
           glVertex2d(-4.4,1.5);
           glEnd();

///building 2

             glBegin(GL_POLYGON);
           glColor3f(1,0,0);
           glVertex2d(-3,-2);
           glVertex2d(-3,2);
           glVertex2d(-2,2);
           glVertex2d(-2,-2);
           glEnd();

            glBegin(GL_POLYGON);
           glColor3f(x,y,z);
           glVertex2d(-2.3,-1.5);
           glVertex2d(-2.3,-1.2);
           glVertex2d(-2.1,-1.2);
           glVertex2d(-2.1,-1.5);
           glEnd();


             glBegin(GL_POLYGON);
           glColor3f(x,y,z);
           glVertex2d(-2.9,-1);
           glVertex2d(-2.9,-0.7);
           glVertex2d(-2.7,-0.7);
           glVertex2d(-2.7,-1);
           glEnd();

              glBegin(GL_POLYGON);
           glColor3f(x,y,z);
           glVertex2d(-2.3,-0.5);
           glVertex2d(-2.3,-0.2);
           glVertex2d(-2.1,-0.2);
           glVertex2d(-2.1,-0.5);
           glEnd();

              glBegin(GL_POLYGON);
           glColor3f(x,y,z);
           glVertex2d(-2.9,0);
           glVertex2d(-2.9,0.3);
           glVertex2d(-2.7,0.3);
           glVertex2d(-2.7,0);
           glEnd();

              glBegin(GL_POLYGON);
           glColor3f(x,y,z);
           glVertex2d(-2.3,0.5);
           glVertex2d(-2.3,0.8);
           glVertex2d(-2.1,0.8);
           glVertex2d(-2.1,0.5);
           glEnd();

              glBegin(GL_POLYGON);
           glColor3f(x,y,z);
           glVertex2d(-2.9,1);
           glVertex2d(-2.9,1.3);
           glVertex2d(-2.7,1.3);
           glVertex2d(-2.7,1);
           glEnd();
           glPopMatrix();


   ///Flags

          glBegin(GL_POLYGON);
           glColor3f(0,0,0);
           glVertex2d(-1.6,-2);
           glVertex2d(-1.6,1);
           glVertex2d(-1.64,1);
           glVertex2d(-1.64,-2);
           glEnd();

             glBegin(GL_POLYGON);
           glColor3f(h1,h2,h3);
           glVertex2d(-1.6,1);
           glVertex2d(-1.3,1);
           glVertex2d(-1.3,0.6);
            glVertex2d(-1.3,0.6);
            glVertex2d(-1.6,0.6);
           glEnd();

              glPushMatrix();
            glScaled(0.1,0.3,0.5);
            glTranslated(-14.4,2.7,0);
            glColor3f(1,0,0);
            circle(0.3,0.3);
            glPopMatrix();







           ///Bus stopage

           glPushMatrix();
           glBegin(GL_POLYGON);
           glColor3f(0,0,0);
           glVertex2d(1,-2);
           glVertex2d(1,-1.3);
           glVertex2d(1.05,-1.3);
           glVertex2d(1.05,-2);
           glEnd();


           glBegin(GL_POLYGON);
           glColor3f(0,0,0);
           glVertex2d(0.7,-1.3);
           glVertex2d(0.7,-1);
           glVertex2d(2.4,-1);
           glVertex2d(2.4,-1.3);

           glEnd();

              glBegin(GL_POLYGON);
           glColor3f(0,0,0);
           glVertex2d(2,-2);
           glVertex2d(2,-1.3);
           glVertex2d(2.05,-1.3);
           glVertex2d(2.05,-2);
           glEnd();


           ///Traffic Light
           glBegin(GL_POLYGON);
           glColor3f(0,0,0);
           glVertex2d(3,-2);
           glVertex2d(3,-1.5);
           glVertex2d(3.05,-1.5);
           glVertex2d(3.05,-2);
           glEnd();

           glBegin(GL_POLYGON);
           glColor3f(0,0,0);
           glVertex2d(2.95,-1.5);
           glVertex2d(2.95,-0.7);
           glVertex2d(3.1,-0.7);
           glVertex2d(3.1,-1.5);
           glEnd();
            glScaled(0.1,0.3,0.5);
            glTranslated(30.2,-4.5,0);
            glColor3f(0.0, 0.5, 0.0);
            circle(0.3,0.3);
                 glPopMatrix();

              glPushMatrix();
            glScaled(0.1,0.3,0.5);
            glTranslated(30.2,-3.7,0);
            glColor3f(102,205,0);
            circle(0.3,0.3);
            glPopMatrix();

                glPushMatrix();
            glScaled(0.1,0.3,0.5);
            glTranslated(30.2,-2.9,0);
            glColor3f(1,0,0);
            circle(0.3,0.3);
            glPopMatrix();


          glBegin(GL_POLYGON);
            glColor3f(0,0,0);
           glVertex2d(2.85,-0.7);
           glVertex2d(3.01,-0.4);
           glVertex2d(3.2,-0.7);
                glEnd();


///light last
glPushMatrix();
             glBegin(GL_POLYGON);
           glColor3f(1,1,1);
           glVertex2d(4.1,-1.3);
           glVertex2d(4.3,-1.3);
           glVertex2d(4.3,-2);
           glVertex2d(4.1,-2);
        glEnd();
        glPopMatrix();

///CARR

glPushMatrix();
glTranslated(cPosition,0,0);

 glPushMatrix();
             glBegin(GL_POLYGON);

           glColor3f(1.0f,0.9f,0.5f);
           glVertex2d(-2.5,-2.1);
           glVertex2d(-0.8,-2.1);
           glVertex2d(-0.6,-2.5);
           glVertex2d(-0.6,-3);
           glVertex2d(-2.5,-3);
        glEnd();

              glBegin(GL_POLYGON);

           glColor3f(0.0,0.0,0.0);
           glVertex2d(-1,-2.2);
           glVertex2d(-0.8,-2.2);
           glVertex2d(-0.8,-2.6);
           glVertex2d(-1,-2.6);
        glEnd();

            glBegin(GL_POLYGON);

           glColor3f(0.0,0.0,0.0);
           glVertex2d(-1.4,-2.2);
           glVertex2d(-1.1,-2.2);
           glVertex2d(-1.2,-2.5);
           glVertex2d(-1.5,-2.5);
           glEnd();


           glBegin(GL_POLYGON);
           glColor3f(0.0,0.0,0.0);
           glVertex2d(-1.8,-2.2);
           glVertex2d(-1.5,-2.2);
           glVertex2d(-1.6,-2.5);
           glVertex2d(-1.9,-2.5);
           glEnd();
            glBegin(GL_POLYGON);
           glColor3f(0.0,0.0,0.0);
           glVertex2d(-2.2,-2.2);
           glVertex2d(-1.9,-2.2);
           glVertex2d(-2,-2.5);
           glVertex2d(-2.3,-2.5);
           glEnd();

           glBegin(GL_LINES);
            glColor3f(0.0,0.0,0.0);

             glVertex2d(-2.3,-2.5);
             glVertex2d(-1.5,-2.5);



        glEnd();

          glBegin(GL_LINES);
            glColor3f(0.0,0.0,0.0);

             glVertex2d(-2.2,-2.2);
             glVertex2d(-1.4,-2.2);



        glEnd();



        glPopMatrix();
         glPushMatrix();

        glScaled(0.2,0.3,0.5);
        glTranslated(-11,-10,0);
        glColor3f(0,0,0);
        glRotated(angle,0,0,-1);
        circle(0.5,0.5);
        glBegin(GL_LINES);
             glColor3f(1.0,1.0,0.0);
            glVertex2d(0,0.5);
            glVertex2d(0,-0.5);
            glVertex2d(-0.5,0);
             glVertex2d(0.5,0);

        glEnd();
    glPopMatrix();
      glPushMatrix();

        glScaled(0.2,0.3,0.5);
        glTranslated(-7.5,-10,0);
        glColor3f(0,0,0);
        glRotated(angle,0,0,-1);
        circle(0.5,0.5);
        glBegin(GL_LINES);
            glColor3f(1.0,1.0,0.0);

             glVertex2d(0,0.5);
             glVertex2d(0,-0.5);
             glVertex2d(-0.5,0);
             glVertex2d(0.5,0);

        glEnd();
glPopMatrix();
         glPopMatrix();
         ///star*************************
glPushMatrix();
            //glScaled(0.8,0.5,1);
            glScaled(0.3,0.5,1);
            glTranslated(2,6,0);
            glColor3f(0.005,0.6,0.9);
            //glRotated(ca,0,0,-1);
            circle(0.04,0.04);
       glPopMatrix();



glPushMatrix();
            //glScaled(0.8,0.5,1);
            glScaled(0.3,0.7,1);
            glTranslated(8,6,0);
             glColor3f(0.005,0.6,0.9);
            //glRotated(ca,0,0,-1);
           circle(0.04,0.04);
       glPopMatrix();
glPushMatrix();
            //glScaled(0.8,0.5,1);
            glScaled(0.3,0.7,1);
            glTranslated(12,8,0);
             glColor3f(0.005,0.6,0.9);
            //glRotated(ca,0,0,-1);
            circle(0.04,0.04);
       glPopMatrix();


glPushMatrix();
            //glScaled(0.8,0.5,1);
            glScaled(0.3,0.7,1);
            glTranslated(-2,4,0);
            glColor3f(0.005,0.6,0.9);
            //glRotated(ca,0,0,-1);
            circle(0.04,0.04);
       glPopMatrix();

glPushMatrix();
            //glScaled(0.8,0.5,1);
            glScaled(0.3,0.7,1);
            glTranslated(-8,5,0);
            glColor3f(0.005,0.6,0.9);
            //glRotated(ca,0,0,-1);
           circle(0.04,0.04);
       glPopMatrix();
       glPushMatrix();
            //glScaled(0.8,0.5,1);
            glScaled(0.3,0.7,1);
            glTranslated(14,5,0);
            glColor3f(0.005,0.6,0.9);
            //glRotated(ca,0,0,-1);
            circle(0.04,0.04);
       glPopMatrix();
       glPushMatrix();
            //glScaled(0.8,0.5,1);
            glScaled(0.3,0.7,1);
            glTranslated(-14,5,0);
            glColor3f(0.005,0.6,0.9);
            //glRotated(ca,0,0,-1);
            circle(0.04,0.04);
       glPopMatrix();
       glPushMatrix();
            //glScaled(0.8,0.5,1);
            glScaled(0.3,0.7,1);
            glTranslated(-12,7,0);
            glColor3f(0.005,0.6,0.9);
            //glRotated(ca,0,0,-1);
            circle(0.04,0.04);
       glPopMatrix();
       glPushMatrix();
            //glScaled(0.8,0.5,1);
            glScaled(0.3,0.5,1);
            glTranslated(1,9,0);
            glColor3f(0.005,0.6,0.9);
            //glRotated(ca,0,0,-1);
            circle(0.04,0.04);
       glPopMatrix();
       glPushMatrix();
            //glScaled(0.8,0.5,1);
            glScaled(0.3,0.5,1);
            glTranslated(-4,7,0);
             glColor3f(0.005,0.6,0.9);
            //glRotated(ca,0,0,-1);
            circle(0.04,0.04);
       glPopMatrix();
        glPushMatrix();
            //glScaled(0.8,0.5,1);
            glScaled(0.3,0.5,1);
            glTranslated(6,7,0);
            glColor3f(0.005,0.6,0.9);
            //glRotated(ca,0,0,-1);
            circle(0.04,0.04);
       glPopMatrix();

 glPushMatrix();
            //glScaled(0.8,0.5,1);
            glScaled(0.3,0.5,1);
            glTranslated(-6,9,0);
            glColor3f(0.005,0.6,0.9);
            //glRotated(ca,0,0,-1);
            circle(0.04,0.04);
       glPopMatrix();
        glPushMatrix();
            //glScaled(0.8,0.5,1);
            glScaled(0.3,0.5,1);
            glTranslated(6,9,0);
            glColor3f(0.005,0.6,0.9);
            //glRotated(ca,0,0,-1);
            circle(0.04,0.04);
       glPopMatrix();
 glPushMatrix();
            //glScaled(0.8,0.5,1);
            glScaled(0.3,0.5,1);
            glTranslated(16,9,0);
            glColor3f(0.005,0.6,0.9);
            //glRotated(ca,0,0,-1);
            circle(0.04,0.04);
       glPopMatrix();
       glPushMatrix();
            //glScaled(0.8,0.5,1);
            glScaled(0.3,0.5,1);
            glTranslated(13,9,0);
            glColor3f(0.005,0.6,0.9);
            //glRotated(ca,0,0,-1);
            circle(0.04,0.04);
       glPopMatrix();
       glPushMatrix();
            //glScaled(0.8,0.5,1);
            glScaled(0.3,0.5,1);
            glTranslated(-11,9,0);
            glColor3f(0.005,0.6,0.9);
            //glRotated(ca,0,0,-1);
            circle(0.04,0.04);
       glPopMatrix();
    ///Cloud


    glPushMatrix();
glTranslated(clPosition,0,0);


        glPushMatrix();
            glScaled(0.2,0.5,1);
            glTranslated(2,7,0);
            //glColor3f(0.5f,1.0f,1.0f);
            glColor3f(x,y,z);
            //glRotated(a,0,0,-1);
            circle(1,1);
        glPopMatrix();

        glPushMatrix();
            //glScaled(0.8,0.5,1);
            glScaled(0.2,0.5,1);
            glTranslated(3.2,7.5,0);
            glColor3f(x,y,z);
           // glRotated(ca,0,0,-1);
            circle(1,1);
        glPopMatrix();


        glPushMatrix();
           //glScaled(0.8,0.5,1);
           glScaled(0.2,0.5,1);
           glTranslated(2.8,7.1,0);
           glColor3f(x,y,z);
           //glRotated(ca,0,0,-1);
           circle(1,1);
        glPopMatrix();

        glPushMatrix();
            //glScaled(0.9,0.5,1);
            glScaled(0.3,0.5,1);
            glTranslated(3.2,6.5,0);
            glColor3f(x,y,z);
            //glRotated(ca,0,0,-1);
            circle(1,1);
       glPopMatrix();
       glPushMatrix();
           // glScaled(0.9,0.5,1);
           glScaled(0.4,0.5,1);
            glTranslated(1,6.5,0);
            glColor3f(x,y,z);
            //glRotated(ca,0,0,-1);
            circle(1,1);
       glPopMatrix();

       glPushMatrix();
            //glScaled(0.8,0.5,1);
            glScaled(0.3,0.5,1);
            glTranslated(2,6,0);
            glColor3f(x,y,z);
            //glRotated(ca,0,0,-1);
            circle(1,1);
       glPopMatrix();

glPopMatrix();




        glFlush();
}


void Mover() {

    //cx = cx+0.005;
    cx = cx-0.0019;
cPosition = cPosition+0.0008;
    if(cPosition > 7.6) {
        cPosition = -7.6;
        first=0.0;
        second=0.0;
        third=0.2;
        x=0.7;
        y=0.7;
        z=0.7;
        h1=0.0;
        h2=0.5;
        h3=0.0;
    }
    angle =angle+2.0;
	if (angle > 360) {
		angle =angle-360;
	}
    clPosition = clPosition-0.0008;
    if(clPosition < -6.2) {
        clPosition = 6.2;
    }

    glutPostRedisplay();


}
/*void wheelMoveForward()
{
    //cx = cx+0.005;
    //ca = ca+0.5;
    glutPostRedisplay();
}

void wheelMoveBackward()
{
   // ca = ca-0.5;
    //cx = cx-0.005;
    glutPostRedisplay();
}*/
/*void specialkey(int key, int x, int y)
{

    switch(key){
    case GLUT_KEY_DOWN:
//glutIdleFunc(Mover);
         break;

    case GLUT_KEY_UP:

        break;


    case GLUT_KEY_LEFT:
        glutIdleFunc(wheelMoveBackward);

          break;

    case GLUT_KEY_RIGHT:

 glutIdleFunc(wheelMoveForward);
        break;
    default:
        break;
    }
}*/

int main()
{
    glutInitDisplayMode(GLUT_SINGLE|GLUT_RGB);
    glutInitWindowSize(500,500);
    glutInitWindowPosition(50,50);
    glutCreateWindow("Simple Line");
    init();
    glutIdleFunc(Mover);
    glutDisplayFunc(myDisplay);
   // glutSpecialFunc(specialkey);
   //glutMouseFunc(mouseKey);
    glutMainLoop();

    return 0;
}
